# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T13:54:25+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, RootModel


class BatchEntryIdsNotDistinct(RootModel[Any]):
    root: Any


class BatchRequestTooLong(RootModel[Any]):
    root: Any


class Binary(RootModel[str]):
    root: str


class BinaryList(RootModel[List[Binary]]):
    root: List[Binary]


class Boolean(RootModel[bool]):
    root: bool


class BoxedInteger(RootModel[int]):
    root: int


class EmptyBatchRequest(RootModel[Any]):
    root: Any


class Integer(RootModel[int]):
    root: int


class InvalidAttributeName(RootModel[Any]):
    root: Any


class InvalidBatchEntryId(RootModel[Any]):
    root: Any


class InvalidIdFormat(RootModel[Any]):
    root: Any


class InvalidMessageContents(RootModel[Any]):
    root: Any


class MessageAttributeName(RootModel[str]):
    root: str


class MessageAttributeNameList(RootModel[List[MessageAttributeName]]):
    root: List[MessageAttributeName]


class MessageNotInflight(RootModel[Any]):
    root: Any


class MessageSystemAttributeName(Enum):
    SenderId = 'SenderId'
    SentTimestamp = 'SentTimestamp'
    ApproximateReceiveCount = 'ApproximateReceiveCount'
    ApproximateFirstReceiveTimestamp = 'ApproximateFirstReceiveTimestamp'
    SequenceNumber = 'SequenceNumber'
    MessageDeduplicationId = 'MessageDeduplicationId'
    MessageGroupId = 'MessageGroupId'
    AWSTraceHeader = 'AWSTraceHeader'


class MessageSystemAttributeNameForSends(Enum):
    AWSTraceHeader = 'AWSTraceHeader'


class OverLimit(RootModel[Any]):
    root: Any


class PurgeQueueInProgress(RootModel[Any]):
    root: Any


class QueueAttributeName(Enum):
    All = 'All'
    Policy = 'Policy'
    VisibilityTimeout = 'VisibilityTimeout'
    MaximumMessageSize = 'MaximumMessageSize'
    MessageRetentionPeriod = 'MessageRetentionPeriod'
    ApproximateNumberOfMessages = 'ApproximateNumberOfMessages'
    ApproximateNumberOfMessagesNotVisible = 'ApproximateNumberOfMessagesNotVisible'
    CreatedTimestamp = 'CreatedTimestamp'
    LastModifiedTimestamp = 'LastModifiedTimestamp'
    QueueArn = 'QueueArn'
    ApproximateNumberOfMessagesDelayed = 'ApproximateNumberOfMessagesDelayed'
    DelaySeconds = 'DelaySeconds'
    ReceiveMessageWaitTimeSeconds = 'ReceiveMessageWaitTimeSeconds'
    RedrivePolicy = 'RedrivePolicy'
    FifoQueue = 'FifoQueue'
    ContentBasedDeduplication = 'ContentBasedDeduplication'
    KmsMasterKeyId = 'KmsMasterKeyId'
    KmsDataKeyReusePeriodSeconds = 'KmsDataKeyReusePeriodSeconds'
    DeduplicationScope = 'DeduplicationScope'
    FifoThroughputLimit = 'FifoThroughputLimit'
    RedriveAllowPolicy = 'RedriveAllowPolicy'
    SqsManagedSseEnabled = 'SqsManagedSseEnabled'


class QueueDeletedRecently(RootModel[Any]):
    root: Any


class QueueDoesNotExist(RootModel[Any]):
    root: Any


class QueueNameExists(RootModel[Any]):
    root: Any


class ReceiptHandleIsInvalid(RootModel[Any]):
    root: Any


class String(RootModel[str]):
    root: str


class StringList(RootModel[List[String]]):
    root: List[String]


class TagKey(RootModel[str]):
    root: str


class TagKeyList(RootModel[List[TagKey]]):
    root: List[TagKey]


class TagValue(RootModel[str]):
    root: str


class Token(RootModel[str]):
    root: str


class TooManyEntriesInBatchRequest(RootModel[Any]):
    root: Any


class UnsupportedOperation(RootModel[Any]):
    root: Any


class UntagQueueRequest(BaseModel):
    QueueUrl: String
    TagKeys: TagKeyList


class Action(Enum):
    AddPermission = 'AddPermission'


class Version(Enum):
    field_2012_11_05 = '2012-11-05'


class Action2(Enum):
    ChangeMessageVisibility = 'ChangeMessageVisibility'


class Action4(Enum):
    ChangeMessageVisibilityBatch = 'ChangeMessageVisibilityBatch'


class Action6(Enum):
    CreateQueue = 'CreateQueue'


class Attribute(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class Tag(RootModel[Optional[Dict[str, TagValue]]]):
    root: Optional[Dict[str, TagValue]] = None


class Action10(Enum):
    DeleteMessage = 'DeleteMessage'


class Action12(Enum):
    DeleteMessageBatch = 'DeleteMessageBatch'


class Action14(Enum):
    DeleteQueue = 'DeleteQueue'


class Action16(Enum):
    GetQueueAttributes = 'GetQueueAttributes'


class Action18(Enum):
    GetQueueUrl = 'GetQueueUrl'


class Action22(Enum):
    ListDeadLetterSourceQueues = 'ListDeadLetterSourceQueues'


class Action24(Enum):
    ListQueueTags = 'ListQueueTags'


class Action26(Enum):
    ListQueues = 'ListQueues'


class Action30(Enum):
    PurgeQueue = 'PurgeQueue'


class Action32(Enum):
    ReceiveMessage = 'ReceiveMessage'


class Action34(Enum):
    RemovePermission = 'RemovePermission'


class Action36(Enum):
    SendMessage = 'SendMessage'


class Action38(Enum):
    SendMessageBatch = 'SendMessageBatch'


class Action40(Enum):
    SetQueueAttributes = 'SetQueueAttributes'


class Action42(Enum):
    TagQueue = 'TagQueue'


class Action44(Enum):
    UntagQueue = 'UntagQueue'


class Action46(Enum):
    AddPermission = 'AddPermission'


class AWSAccountIds(RootModel[List[String]]):
    root: List[String]


class Actions(RootModel[List[String]]):
    root: List[String]


class Action48(Enum):
    ChangeMessageVisibility = 'ChangeMessageVisibility'


class Action50(Enum):
    ChangeMessageVisibilityBatch = 'ChangeMessageVisibilityBatch'


class Action52(Enum):
    DeleteMessage = 'DeleteMessage'


class Action54(Enum):
    DeleteMessageBatch = 'DeleteMessageBatch'


class Action56(Enum):
    DeleteQueue = 'DeleteQueue'


class Action58(Enum):
    GetQueueAttributes = 'GetQueueAttributes'


class AttributeNames(RootModel[List[QueueAttributeName]]):
    root: List[QueueAttributeName]


class Action60(Enum):
    ListDeadLetterSourceQueues = 'ListDeadLetterSourceQueues'


class Action62(Enum):
    ListQueueTags = 'ListQueueTags'


class Action64(Enum):
    PurgeQueue = 'PurgeQueue'


class Action66(Enum):
    ReceiveMessage = 'ReceiveMessage'


class MessageAttributeNames(RootModel[List[MessageAttributeName]]):
    root: List[MessageAttributeName]


class Action68(Enum):
    RemovePermission = 'RemovePermission'


class Action70(Enum):
    SendMessage = 'SendMessage'


class Action72(Enum):
    SendMessageBatch = 'SendMessageBatch'


class Action74(Enum):
    SetQueueAttributes = 'SetQueueAttributes'


class Action76(Enum):
    TagQueue = 'TagQueue'


class Tags(RootModel[Optional[Dict[str, TagValue]]]):
    root: Optional[Dict[str, TagValue]] = None


class Action78(Enum):
    UntagQueue = 'UntagQueue'


class TagKeys(RootModel[List[TagKey]]):
    root: List[TagKey]


class AWSAccountIdList(RootModel[List[String]]):
    root: List[String]


class ActionNameList(RootModel[List[String]]):
    root: List[String]


class AddPermissionRequest(BaseModel):
    AWSAccountIds: AWSAccountIdList
    Actions: ActionNameList
    Label: String
    QueueUrl: String


class AttributeNameList(RootModel[List[QueueAttributeName]]):
    root: List[QueueAttributeName]


class BatchResultErrorEntry(BaseModel):
    Code: String
    Id: String
    Message: Optional[String] = None
    SenderFault: Boolean


class BatchResultErrorEntryList(RootModel[List[BatchResultErrorEntry]]):
    root: List[BatchResultErrorEntry]


class ChangeMessageVisibilityBatchRequestEntry(BaseModel):
    Id: String
    ReceiptHandle: String
    VisibilityTimeout: Optional[Integer] = None


class ChangeMessageVisibilityBatchRequestEntryList(
    RootModel[List[ChangeMessageVisibilityBatchRequestEntry]]
):
    root: List[ChangeMessageVisibilityBatchRequestEntry]


class ChangeMessageVisibilityBatchResultEntry(BaseModel):
    Id: String


class ChangeMessageVisibilityBatchResultEntryList(
    RootModel[List[ChangeMessageVisibilityBatchResultEntry]]
):
    root: List[ChangeMessageVisibilityBatchResultEntry]


class ChangeMessageVisibilityRequest(BaseModel):
    QueueUrl: String
    ReceiptHandle: String
    VisibilityTimeout: Integer


class CreateQueueResult(BaseModel):
    QueueUrl: Optional[String] = None


class DeleteMessageBatchRequestEntry(BaseModel):
    Id: String
    ReceiptHandle: String


class DeleteMessageBatchRequestEntryList(
    RootModel[List[DeleteMessageBatchRequestEntry]]
):
    root: List[DeleteMessageBatchRequestEntry]


class DeleteMessageBatchResultEntry(BaseModel):
    Id: String


class DeleteMessageBatchResultEntryList(RootModel[List[DeleteMessageBatchResultEntry]]):
    root: List[DeleteMessageBatchResultEntry]


class DeleteMessageRequest(BaseModel):
    QueueUrl: String
    ReceiptHandle: String


class DeleteQueueRequest(BaseModel):
    QueueUrl: String


class GetQueueAttributesRequest(BaseModel):
    AttributeNames: Optional[AttributeNameList] = None
    QueueUrl: String


class GetQueueUrlRequest(BaseModel):
    QueueName: String
    QueueOwnerAWSAccountId: Optional[String] = None


class GetQueueUrlResult(BaseModel):
    QueueUrl: Optional[String] = None


class ListDeadLetterSourceQueuesRequest(BaseModel):
    MaxResults: Optional[BoxedInteger] = None
    NextToken: Optional[Token] = None
    QueueUrl: String


class ListQueueTagsRequest(BaseModel):
    QueueUrl: String


class ListQueuesRequest(BaseModel):
    MaxResults: Optional[BoxedInteger] = None
    NextToken: Optional[Token] = None
    QueueNamePrefix: Optional[String] = None


class MessageAttributeValue(BaseModel):
    BinaryListValues: Optional[BinaryList] = None
    BinaryValue: Optional[Binary] = None
    DataType: String
    StringListValues: Optional[StringList] = None
    StringValue: Optional[String] = None


class MessageBodyAttributeMap(RootModel[Optional[Dict[str, MessageAttributeValue]]]):
    root: Optional[Dict[str, MessageAttributeValue]] = None


class MessageSystemAttributeMap(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class MessageSystemAttributeValue(BaseModel):
    BinaryListValues: Optional[BinaryList] = None
    BinaryValue: Optional[Binary] = None
    DataType: String
    StringListValues: Optional[StringList] = None
    StringValue: Optional[String] = None


class PurgeQueueRequest(BaseModel):
    QueueUrl: String


class QueueAttributeMap(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class QueueUrlList(RootModel[List[String]]):
    root: List[String]


class ReceiveMessageRequest(BaseModel):
    AttributeNames: Optional[AttributeNameList] = None
    MaxNumberOfMessages: Optional[Integer] = None
    MessageAttributeNames: Optional[MessageAttributeNameList] = None
    QueueUrl: String
    ReceiveRequestAttemptId: Optional[String] = None
    VisibilityTimeout: Optional[Integer] = None
    WaitTimeSeconds: Optional[Integer] = None


class RemovePermissionRequest(BaseModel):
    Label: String
    QueueUrl: String


class SendMessageBatchResultEntry(BaseModel):
    Id: String
    MD5OfMessageAttributes: Optional[String] = None
    MD5OfMessageBody: String
    MD5OfMessageSystemAttributes: Optional[String] = None
    MessageId: String
    SequenceNumber: Optional[String] = None


class SendMessageBatchResultEntryList(RootModel[List[SendMessageBatchResultEntry]]):
    root: List[SendMessageBatchResultEntry]


class SendMessageResult(BaseModel):
    MD5OfMessageAttributes: Optional[String] = None
    MD5OfMessageBody: Optional[String] = None
    MD5OfMessageSystemAttributes: Optional[String] = None
    MessageId: Optional[String] = None
    SequenceNumber: Optional[String] = None


class SetQueueAttributesRequest(BaseModel):
    Attributes: QueueAttributeMap
    QueueUrl: String


class TagMap(RootModel[Optional[Dict[str, TagValue]]]):
    root: Optional[Dict[str, TagValue]] = None


class TagQueueRequest(BaseModel):
    QueueUrl: String
    Tags: TagMap


class Entries(RootModel[List[ChangeMessageVisibilityBatchRequestEntry]]):
    root: List[ChangeMessageVisibilityBatchRequestEntry]


class Entries1(RootModel[List[DeleteMessageBatchRequestEntry]]):
    root: List[DeleteMessageBatchRequestEntry]


class MessageAttribute(RootModel[Optional[Dict[str, MessageAttributeValue]]]):
    root: Optional[Dict[str, MessageAttributeValue]] = None


class MessageSystemAttribute(
    RootModel[Optional[Dict[str, MessageSystemAttributeValue]]]
):
    root: Optional[Dict[str, MessageSystemAttributeValue]] = None


class ChangeMessageVisibilityBatchRequest(BaseModel):
    Entries: ChangeMessageVisibilityBatchRequestEntryList
    QueueUrl: String


class ChangeMessageVisibilityBatchResult(BaseModel):
    Failed: BatchResultErrorEntryList
    Successful: ChangeMessageVisibilityBatchResultEntryList


class CreateQueueRequest(BaseModel):
    Attributes: Optional[QueueAttributeMap] = None
    QueueName: String
    tags: Optional[TagMap] = None


class DeleteMessageBatchRequest(BaseModel):
    Entries: DeleteMessageBatchRequestEntryList
    QueueUrl: String


class DeleteMessageBatchResult(BaseModel):
    Failed: BatchResultErrorEntryList
    Successful: DeleteMessageBatchResultEntryList


class GetQueueAttributesResult(BaseModel):
    Attributes: Optional[QueueAttributeMap] = None


class ListDeadLetterSourceQueuesResult(BaseModel):
    NextToken: Optional[Token] = None
    queueUrls: QueueUrlList


class ListQueueTagsResult(BaseModel):
    Tags: Optional[TagMap] = None


class ListQueuesResult(BaseModel):
    NextToken: Optional[Token] = None
    QueueUrls: Optional[QueueUrlList] = None


class Message(BaseModel):
    Attributes: Optional[MessageSystemAttributeMap] = None
    Body: Optional[String] = None
    MD5OfBody: Optional[String] = None
    MD5OfMessageAttributes: Optional[String] = None
    MessageAttributes: Optional[MessageBodyAttributeMap] = None
    MessageId: Optional[String] = None
    ReceiptHandle: Optional[String] = None


class MessageBodySystemAttributeMap(
    RootModel[Optional[Dict[str, MessageSystemAttributeValue]]]
):
    root: Optional[Dict[str, MessageSystemAttributeValue]] = None


class MessageList(RootModel[List[Message]]):
    root: List[Message]


class ReceiveMessageResult(BaseModel):
    Messages: Optional[MessageList] = None


class SendMessageBatchRequestEntry(BaseModel):
    DelaySeconds: Optional[Integer] = None
    Id: String
    MessageAttributes: Optional[MessageBodyAttributeMap] = None
    MessageBody: String
    MessageDeduplicationId: Optional[String] = None
    MessageGroupId: Optional[String] = None
    MessageSystemAttributes: Optional[MessageBodySystemAttributeMap] = None


class SendMessageBatchRequestEntryList(RootModel[List[SendMessageBatchRequestEntry]]):
    root: List[SendMessageBatchRequestEntry]


class SendMessageBatchResult(BaseModel):
    Failed: BatchResultErrorEntryList
    Successful: SendMessageBatchResultEntryList


class SendMessageRequest(BaseModel):
    DelaySeconds: Optional[Integer] = None
    MessageAttributes: Optional[MessageBodyAttributeMap] = None
    MessageBody: String
    MessageDeduplicationId: Optional[String] = None
    MessageGroupId: Optional[String] = None
    MessageSystemAttributes: Optional[MessageBodySystemAttributeMap] = None
    QueueUrl: String


class Entries2(RootModel[List[SendMessageBatchRequestEntry]]):
    root: List[SendMessageBatchRequestEntry]


class SendMessageBatchRequest(BaseModel):
    Entries: SendMessageBatchRequestEntryList
    QueueUrl: String
